{"ast":null,"code":"var _jsxFileName = \"/Users/kishore/my-app/src/craft/authorDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthorsDetails = props => {\n  _s();\n\n  //var id = props.match.params.id\n  var id = \"1018\";\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    fetch(\"https://picsum.photos/v2/list?page=2&amp;limit=20\").then(res => res.json()).then(data => {\n      setIsLoaded(true);\n      setUsers(data);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [user.author, \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.download_url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 38\n        }, this)]\n      }, user.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(AuthorsDetails, \"aHiVWXzzhrAW9OCzHmWSj9UTJ9Q=\");\n\n_c = AuthorsDetails;\nexport default AuthorsDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthorsDetails\");","map":{"version":3,"sources":["/Users/kishore/my-app/src/craft/authorDetails.js"],"names":["React","useState","useEffect","AuthorsDetails","props","id","error","setError","isLoaded","setIsLoaded","users","setUsers","fetch","then","res","json","data","message","map","user","author","download_url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA4C,OAA5C;;;AAGA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAAA;;AAGhC;AACA,MAAIC,EAAE,GAAG,MAAT;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACI,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,KAAK,CAAC,mDAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGSG,IAAD,IAAU;AACNP,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,QAAQ,CAACK,IAAD,CAAR;AACH,KANT,EAOSV,KAAD,IAAW;AACPG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAVT;AAYD,GAbM,EAaJ,EAbI,CAAT;;AAcJ,MAAIA,KAAJ,EAAW;AACH,wBAAO;AAAA,4BAAaA,KAAK,CAACW,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFL,MAEW,IAAI,CAACT,QAAL,EAAe;AAClB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFM,MAEA;AACH,wBACI;AAAA,gBACKE,KAAK,CAACQ,GAAN,CAAUC,IAAI,iBACf;AAAA,mBACQA,IAAI,CAACC,MADb,oBACqB;AAAK,UAAA,GAAG,EAAED,IAAI,CAACE;AAAf;AAAA;AAAA;AAAA;AAAA,gBADrB;AAAA,SAASF,IAAI,CAACd,EAAd;AAAA;AAAA;AAAA;AAAA,cADC;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;AAEJ,CAtCD;;GAAMF,c;;KAAAA,c;AAuCN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect }  from 'react';\n\n\nconst AuthorsDetails = props => {\n\n\n//var id = props.match.params.id\nvar id = \"1018\"\nconst [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [users, setUsers] = useState([]);\n    useEffect(() => {\n        fetch(\"https://picsum.photos/v2/list?page=2&amp;limit=20\")\n            .then(res => res.json())\n            .then(\n                (data) => {\n                    setIsLoaded(true);\n                    setUsers(data);\n                },\n                (error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                }\n            )\n      }, [])\nif (error) {\n        return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n        return <div>Loading...</div>;\n    } else {\n        return (\n            <ul>\n                {users.map(user => (\n                <li key={user.id} >\n                       {user.author} <img src={user.download_url} />\n                </li>\n                ))}\n            </ul>\n        );\n    }\n\n}\nexport default AuthorsDetails;"]},"metadata":{},"sourceType":"module"}